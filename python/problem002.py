#! /usr/bin/env python3
"""
Each new term in the Fibonacci sequence is generated by adding the previous two
terms. By starting with 1 and 2, the first 10 terms will be:

    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

    By considering the terms in the Fibonacci sequence whose values do not
    exceed four million, find the sum of the even-valued terms.
"""
from itertools import takewhile

def fibonacci(a=1, b=2):
    """ Produces an infinite iterator over the "Fibonacci" numbers """
    yield a
    yield b
    while True:
        yield a + b
        a, b = b, a+b


def main():
    """
    >>> main()
    4613732
    """
    candidate_values = takewhile(lambda n: n < 4e6, fibonacci())
    return sum(num for num in candidate_values if num % 2 == 0)


if __name__ == '__main__':
    import doctest
    doctest.testmod(verbose=True)

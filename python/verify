#! /usr/bin/env python3
"""
Utility script: find the module corresponding to the problem number given
on the command line, then execute its doctests.
"""
import argparse
import doctest
from importlib import import_module


#  set up terminal printing
WARN = '\033[93m'
GREEN = '\033[92m'
RED = '\033[91m'
END_COLOR = '\033[0m'

def color(color_code, text):
    return ''.join([color_code, text, END_COLOR])


# set up the argument parsing
parser = argparse.ArgumentParser()
parser.add_argument('problems', nargs='*', help='Problems to verify')
parser.add_argument('-v', '--verbose', action='count', default=0)
#print(args)

# run the script
if __name__ == '__main__':
    args = parser.parse_args()

    for problem_no in args.problems:
        module_name = 'problem{:0>3}'.format(problem_no)
        #print(module_name)
        print('Verifying {}: '.format(module_name), end='')
        try:
            module = import_module(module_name)
        except ImportError:
            print(color(WARN, '[WARN]'), 
                  'No module {!r} found, skipping...'.format(module_name))
            continue

        if args.verbose > 1:
            print('\n')
        failed, tried = doctest.testmod(module, verbose=args.verbose > 1) 
        if failed == 0:
            output = color(GREEN, '[OK]')
            if args.verbose > 0:
                output += ' all {} tests passed'.format(tried)
        else:
            output = color(RED, '[FAIL]')
            if args.verbose > 0:
                output += ' {} tests failed'.format(failed)
        print(output)
